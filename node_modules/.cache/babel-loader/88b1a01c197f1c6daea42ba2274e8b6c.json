{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Applications/ErrorPopUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactComponent as CloseLogo } from '../../images/close_black_24dp.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ErrorPopUp(_ref) {\n  _s();\n\n  let {\n    gotErr,\n    setGotErr,\n    ...msg\n  } = _ref;\n  const [errorMsg] = useState(msg);\n  if (!gotError) return null;\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-pop-up\",\n    children: [/*#__PURE__*/_jsxDEV(CloseLogo, {\n      className: \"close-err-msg\",\n      onClick: () => setGotErr(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Oops, there was an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), Array.isArray(errorMsg) && errorMsg.array.forEach(element => `<p>${element}<p>`) && console.log(`passed: ${gotErr}`) && console.log(`msg: ${errorMsg}`)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), document.getElementById('portal'));\n}\n\n_s(ErrorPopUp, \"5BvzRbsD9owQ1xeq4XOColjWL1g=\");\n\n_c = ErrorPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorPopUp\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Applications/ErrorPopUp.js"],"names":["React","useState","ReactDOM","ReactComponent","CloseLogo","ErrorPopUp","gotErr","setGotErr","msg","errorMsg","gotError","createPortal","Array","isArray","array","forEach","element","console","log","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,mCAA5C;;AAEA,eAAe,SAASC,UAAT,OAAmD;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqB,OAAGC;AAAxB,GAA+B;AAChE,QAAM,CAACC,QAAD,IAAaR,QAAQ,CAACO,GAAD,CAA3B;AACA,MAAI,CAACE,QAAL,EAAe,OAAO,IAAP;AACf,sBAAOR,QAAQ,CAACS,YAAT,eACL;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,eAArB;AAAqC,MAAA,OAAO,EAAE,MAAMJ,SAAS,CAAC,KAAD;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGK,KAAK,CAACC,OAAN,CAAcJ,QAAd,KACEA,QAAQ,CAACK,KAAT,CAAeC,OAAf,CAAwBC,OAAD,IAAc,MAAKA,OAAQ,KAAlD,CADF,IAEEC,OAAO,CAACC,GAAR,CAAa,WAAUZ,MAAO,EAA9B,CAFF,IAGEW,OAAO,CAACC,GAAR,CAAa,QAAOT,QAAS,EAA7B,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,EASLU,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CATK,CAAP;AAWD;;GAduBf,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactComponent as CloseLogo } from '../../images/close_black_24dp.svg';\n\nexport default function ErrorPopUp({ gotErr, setGotErr, ...msg }) {\n  const [errorMsg] = useState(msg);\n  if (!gotError) return null;\n  return ReactDOM.createPortal(\n    <div className=\"error-pop-up\">\n      <CloseLogo className=\"close-err-msg\" onClick={() => setGotErr(false)} />\n      <h1>Oops, there was an error!</h1>\n      {Array.isArray(errorMsg)\n      && errorMsg.array.forEach((element) => `<p>${element}<p>`)\n      && console.log(`passed: ${gotErr}`)\n      && console.log(`msg: ${errorMsg}`)}\n    </div>,\n    document.getElementById('portal'),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}