{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/NewApplicationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/newApplicationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewApplicationForm() {\n  _s();\n\n  const [companyName, setCompanyName] = useState('');\n  const [position, setPosition] = useState('');\n  const [salary, setSalary] = useState('');\n  const [status, setStatus] = useState('');\n  const [location, setLocation] = useState('');\n  const [aggregator, setAggregator] = useState('');\n  const [foundOn, setFoundOn] = useState('');\n  const [cvSentOn, setCvSentOn] = useState('');\n  const [cvPath, setCvPath] = useState('');\n  const [jobLink, setJobLink] = useState('');\n  const [answerReceived, setAnswerReceived] = useState('');\n  const [qualificationsMet, setQualificationsMet] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const navigation = function postNewApplication() {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      body: JSON.stringify({\n        companyName,\n        position,\n        salary,\n        status,\n        location,\n        aggregator,\n        foundOn,\n        cvSentOn,\n        cvPath,\n        jobLink,\n        answerReceived,\n        qualificationsMet\n      })\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    postNewApplication().then(res => res.json()).then(json => {\n      if (json.msg !== 'success') {\n        setErrors(json.err.errors);\n      } else {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"newApplication\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"companyName\",\n      children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"position\",\n      children: [\"Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"position\",\n        value: position,\n        onChange: e => setPosition(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"salary\",\n      children: [\"Salary\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"salary\",\n        value: salary,\n        onChange: e => setSalary(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"status\",\n      children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: status,\n        id: \"status\",\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"--Please select an option--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Application sent\",\n          children: \"Application sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"No answer\",\n          children: \"No answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Rejection\",\n          children: \"Rejection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Upcoming interview\",\n          children: \"Upcoming interview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Offered\",\n          children: \"Offered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"location\",\n      children: [\"Location\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"location\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"aggregator\",\n      children: [\"Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"aggregator\",\n        value: aggregator,\n        onChange: e => setAggregator(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"foundOn\",\n      children: [\"Offer was found on:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"foundOn\",\n        value: foundOn,\n        onChange: e => setFoundOn(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"cvSentOn\",\n      children: [\"CV was sent on:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cvSentOn\",\n        value: cvSentOn,\n        onChange: e => setCvSentOn(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"cvPath\",\n      children: [\"Upload CV\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cvPath\",\n        value: cvPath,\n        onChange: e => setCvPath(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"jobLink\",\n      children: [\"Link to the offer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"jobLink\",\n        value: jobLink,\n        onChange: e => setJobLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"answerReceivedOn\",\n      children: [\"Answer received on:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"answerReceivedOn\",\n        value: answerReceived,\n        onChange: e => setAnswerReceived(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"qualificationsMet\",\n      children: [\"Qualifications:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: qualificationsMet,\n        id: \"qualificationsMet\",\n        onChange: e => setQualificationsMet(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"--Please select an option--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fully met\",\n          children: \"Fully met\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Mostly met\",\n          children: \"Mostly met\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Half are met\",\n          children: \"Half are met\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Mostly unmet\",\n          children: \"Mostly unmet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fully unmet\",\n          children: \"Fully unmet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewApplicationForm, \"2Nfxt8Gn2t4jSV+ohm6AXwLGaTM=\");\n\n_c = NewApplicationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewApplicationForm\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/NewApplicationForm.js"],"names":["React","useEffect","useState","useNavigate","NewApplicationForm","companyName","setCompanyName","position","setPosition","salary","setSalary","status","setStatus","location","setLocation","aggregator","setAggregator","foundOn","setFoundOn","cvSentOn","setCvSentOn","cvPath","setCvPath","jobLink","setJobLink","answerReceived","setAnswerReceived","qualificationsMet","setQualificationsMet","errors","setErrors","navigation","postNewApplication","fetch","process","env","REACT_APP_API_SERVER","method","credentials","headers","body","JSON","stringify","onSubmit","e","preventDefault","then","res","json","msg","err","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/newApplicationForm.css';\n\nexport default function NewApplicationForm() {\n  const [companyName, setCompanyName] = useState('');\n  const [position, setPosition] = useState('');\n  const [salary, setSalary] = useState('');\n  const [status, setStatus] = useState('');\n  const [location, setLocation] = useState('');\n  const [aggregator, setAggregator] = useState('');\n  const [foundOn, setFoundOn] = useState('');\n  const [cvSentOn, setCvSentOn] = useState('');\n  const [cvPath, setCvPath] = useState('');\n  const [jobLink, setJobLink] = useState('');\n  const [answerReceived, setAnswerReceived] = useState('');\n  const [qualificationsMet, setQualificationsMet] = useState('');\n  const [errors, setErrors] = useState([]);\n  const navigation = \n\n  function postNewApplication() {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      body: JSON.stringify({\n        companyName,\n        position,\n        salary,\n        status,\n        location,\n        aggregator,\n        foundOn,\n        cvSentOn,\n        cvPath,\n        jobLink,\n        answerReceived,\n        qualificationsMet,\n      }),\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    postNewApplication()\n    .then((res) => res.json())\n    .then((json) => {\n      if (json.msg !== 'success') {\n        setErrors(json.err.errors);\n      } else {\n        \n      }\n    })\n  };\n\n  return (\n    <form className=\"newApplication\">\n      <label htmlFor=\"companyName\">\n        Company Name\n        <input type=\"text\" id=\"companyName\" value={companyName} onChange={(e) => setCompanyName(e.target.value)} />\n      </label>\n      <label htmlFor=\"position\">\n        Position\n        <input type=\"text\" id=\"position\" value={position} onChange={(e) => setPosition(e.target.value)} />\n      </label>\n      <label htmlFor=\"salary\">\n        Salary\n        <input type=\"number\" id=\"salary\" value={salary} onChange={(e) => setSalary(e.target.value)} />\n      </label>\n      <label htmlFor=\"status\">\n        Status\n        <select defaultValue={status} id=\"status\" onChange={(e) => setStatus(e.target.value)}>\n          <option value={null}>--Please select an option--</option>\n          <option value=\"Application sent\">Application sent</option>\n          <option value=\"No answer\">No answer</option>\n          <option value=\"Rejection\">Rejection</option>\n          <option value=\"Upcoming interview\">Upcoming interview</option>\n          <option value=\"Offered\">Offered</option>\n        </select>\n      </label>\n      <label htmlFor=\"location\">\n        Location\n        <input type=\"text\" id=\"location\" value={location} onChange={(e) => setLocation(e.target.value)} />\n      </label>\n      <label htmlFor=\"aggregator\">\n        Position\n        <input type=\"text\" id=\"aggregator\" value={aggregator} onChange={(e) => setAggregator(e.target.value)} />\n      </label>\n      <label htmlFor=\"foundOn\">\n        Offer was found on:\n        <input type=\"date\" id=\"foundOn\" value={foundOn} onChange={(e) => setFoundOn(e.target.value)} />\n      </label>\n      <label htmlFor=\"cvSentOn\">\n        CV was sent on:\n        <input type=\"text\" id=\"cvSentOn\" value={cvSentOn} onChange={(e) => setCvSentOn(e.target.value)} />\n      </label>\n      <label htmlFor=\"cvPath\">\n        Upload CV\n        <input type=\"text\" id=\"cvPath\" value={cvPath} onChange={(e) => setCvPath(e.target.value)} />\n      </label>\n      <label htmlFor=\"jobLink\">\n        Link to the offer:\n        <input type=\"file\" id=\"jobLink\" value={jobLink} onChange={(e) => setJobLink(e.target.value)} />\n      </label>\n      <label htmlFor=\"answerReceivedOn\">\n        Answer received on:\n        <input type=\"date\" id=\"answerReceivedOn\" value={answerReceived} onChange={(e) => setAnswerReceived(e.target.value)} />\n      </label>\n      <label htmlFor=\"qualificationsMet\">\n        Qualifications:\n        <select defaultValue={qualificationsMet} id=\"qualificationsMet\" onChange={(e) => setQualificationsMet(e.target.value)}>\n          <option value={null}>--Please select an option--</option>\n          <option value=\"Fully met\">Fully met</option>\n          <option value=\"Mostly met\">Mostly met</option>\n          <option value=\"Half are met\">Half are met</option>\n          <option value=\"Mostly unmet\">Mostly unmet</option>\n          <option value=\"Fully unmet\">Fully unmet</option>\n        </select>\n      </label>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}