{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Offers/Offers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport LoadingSpinner from '../LoadingSpinner';\nimport OfferGeneral from './OfferGeneral';\nimport OfferUpdateForm from './OfferUpdateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Offers() {\n  _s();\n\n  const [offers, setOffers] = useState([]);\n  const [, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}offers`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (typeof json.err !== 'undefined') {\n        setErrors(json.err);\n        setLoaded(true);\n      } else {\n        setOffers(json.offers);\n        setLoaded(true);\n      }\n    });\n  });\n  return loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [offers.map(offer => /*#__PURE__*/_jsxDEV(OfferGeneral, {\n      offer: offer\n    }, offer._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 34\n    }, this)), /*#__PURE__*/_jsxDEV(OfferUpdateForm, {\n      isOpen: isOpen,\n      setIsOpen: setIsOpen,\n      onClose: () => setIsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Offers, \"fRGzhTIkUkAtucb7dA6UI3OID3U=\");\n\n_c = Offers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Offers\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Offers/Offers.js"],"names":["React","useEffect","useState","LoadingSpinner","OfferGeneral","OfferUpdateForm","Offers","offers","setOffers","setErrors","loaded","setLoaded","isOpen","setIsOpen","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","err","map","offer","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,GAAGO,SAAH,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,QAArC,EAA8C;AACjDC,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,WAAW,EAAE;AAFoC,KAA9C,CAAL,CAIGC,IAJH,CAISC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJjB,EAKGF,IALH,CAKSE,IAAD,IAAU;AACd,UAAI,OAAOA,IAAI,CAACC,GAAZ,KAAoB,WAAxB,EAAqC;AACnCd,QAAAA,SAAS,CAACa,IAAI,CAACC,GAAN,CAAT;AACAZ,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAHD,MAGO;AACLH,QAAAA,SAAS,CAACc,IAAI,CAACf,MAAN,CAAT;AACAI,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KAbH;AAcD,GAfQ,CAAT;AAiBA,SACED,MAAM,gBAEF;AAAA,eACGH,MAAM,CAACiB,GAAP,CAAYC,KAAD,iBAAW,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB,OAAiCA,KAAK,CAACC,GAAvC;AAAA;AAAA;AAAA;AAAA,YAAtB,CADH,eAEE,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEd,MAAzB;AAAiC,MAAA,SAAS,EAAEC,SAA5C;AAAuD,MAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,KAAD;AAA/E;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,gBAOF,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UARN;AAUD;;GAjCuBP,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LoadingSpinner from '../LoadingSpinner';\nimport OfferGeneral from './OfferGeneral';\nimport OfferUpdateForm from './OfferUpdateForm';\n\nexport default function Offers() {\n  const [offers, setOffers] = useState([]);\n  const [, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}offers`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (typeof json.err !== 'undefined') {\n          setErrors(json.err);\n          setLoaded(true);\n        } else {\n          setOffers(json.offers);\n          setLoaded(true);\n        }\n      });\n  });\n\n  return (\n    loaded\n      ? (\n        <div>\n          {offers.map((offer) => <OfferGeneral offer={offer} key={offer._id} />)}\n          <OfferUpdateForm isOpen={isOpen} setIsOpen={setIsOpen} onClose={() => setIsOpen(false)} />\n        </div>\n      )\n      : <LoadingSpinner />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}