{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/ApplicatoinDetailed.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ApplicationDetailed() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [application, setApplication] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API_SERVER + `applications/${id}`, {\n      method: \"GET\",\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (json.application !== undefined) {\n        setApplication(json.application);\n        setLoaded(true);\n      } else {\n        setErrors(json.err.errors);\n      }\n    }).catch(err => setErrors([err]));\n  }, [id]);\n  return !loaded ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <article className='detailed'>\n  //   <h2>Company: {application.company_name}</h2>\n  //   <p>Position: {application.position}</p>\n  //   <p>Salary: {application.salary}$ per month</p>\n  //   <p>Status: {application.status}</p>\n  //   <p>Location: {application.location}</p>\n  //   <p>Aggregator: {application.aggregator}</p>\n  //   <p>Found on {application.found_on}</p>\n  //   <p><a href={application.job_link}>Job link</a></p>\n  //   <p>Answers received: {application.answer_received}</p>\n  //   <p>Qualifications {application.qualifications_met}</p>\n  // </article>\n  ;\n}\n\n_s(ApplicationDetailed, \"+vMEKG3JFFOwya8V9chOI3oe/NU=\", false, function () {\n  return [useParams];\n});\n\n_c = ApplicationDetailed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicationDetailed\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/ApplicatoinDetailed.js"],"names":["useEffect","useState","useParams","LoadingSpinner","ApplicationDetailed","id","application","setApplication","errors","setErrors","loaded","setLoaded","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","undefined","err","catch"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,eAAe,SAASC,mBAAT,GAAgC;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,GAAoC,gBAAeV,EAAG,EAAvD,EAA0D;AAC7DW,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,WAAW,EAAE;AAFgD,KAA1D,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKGF,IALH,CAKQE,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACd,WAAL,KAAqBe,SAAzB,EAAoC;AAClCd,QAAAA,cAAc,CAACa,IAAI,CAACd,WAAN,CAAd;AACAK,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAHD,MAGO;AACLF,QAAAA,SAAS,CAACW,IAAI,CAACE,GAAL,CAASd,MAAV,CAAT;AACD;AACF,KAZH,EAaGe,KAbH,CAaSD,GAAG,IAAIb,SAAS,CAAC,CAACa,GAAD,CAAD,CAbzB;AAcD,GAfQ,EAeN,CAACjB,EAAD,CAfM,CAAT;AAkBE,SACE,CAACK,MAAD,gBACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UADA,gBAEE,qCAHJ,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBH;;GAxCuBN,mB;UACPF,S;;;KADOE,mB","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, } from \"react-router-dom\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nexport default function ApplicationDetailed () {\n  const { id } = useParams();\n  const [application, setApplication] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API_SERVER + `applications/${id}`, {\n      method: \"GET\",\n      credentials: 'include',\n    })\n      .then(res => res.json())\n      .then(json => {\n        if (json.application !== undefined) {\n          setApplication(json.application);\n          setLoaded(true);\n        } else {\n          setErrors(json.err.errors);\n        }\n      })\n      .catch(err => setErrors([err]));\n  }, [id]);\n  \n\n    return (\n      !loaded ?\n      <LoadingSpinner />\n      : <></>\n      // <article className='detailed'>\n      //   <h2>Company: {application.company_name}</h2>\n      //   <p>Position: {application.position}</p>\n      //   <p>Salary: {application.salary}$ per month</p>\n      //   <p>Status: {application.status}</p>\n      //   <p>Location: {application.location}</p>\n      //   <p>Aggregator: {application.aggregator}</p>\n      //   <p>Found on {application.found_on}</p>\n      //   <p><a href={application.job_link}>Job link</a></p>\n      //   <p>Answers received: {application.answer_received}</p>\n      //   <p>Qualifications {application.qualifications_met}</p>\n      // </article>\n    )\n}"]},"metadata":{},"sourceType":"module"}