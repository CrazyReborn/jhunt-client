{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport ReactFlow, { Position } from 'react-flow-renderer';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const [applications, setApplications] = useState([]);\n  const [interviews, setInterviews] = useState([]);\n  const [elements, setElements] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const createApplicationElements = () => {\n    const newArray = applications.map((application, index) => ({\n      id: application._id,\n      type: 'input',\n      data: {\n        label: `Listing at ${application.company_name}`\n      },\n      position: {\n        x: 250 + 200 * index,\n        y: 20\n      },\n      draggable: false,\n      isHidden: false\n    }));\n    return newArray;\n  };\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}profile`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (typeof json.err !== 'undefined') {\n        console.log('Fetching error', json.err);\n      } else {\n        setApplications(json.applications);\n        setInterviews(json.interviews);\n        console.log('before');\n        setElements(createApplicationElements());\n        console.log('after');\n        setLoaded(true);\n      }\n    }).catch(err => console.log('error: ', err));\n  }, []);\n  return loaded ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n    elements: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"CGQ7qG3/lgy494/BtfzaxH+vweU=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Profile.js"],"names":["React","useState","useEffect","ReactFlow","Position","LoadingSpinner","Profile","applications","setApplications","interviews","setInterviews","elements","setElements","loaded","setLoaded","createApplicationElements","newArray","map","application","index","id","_id","type","data","label","company_name","position","x","y","draggable","isHidden","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","err","console","log","catch"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,IAAoBC,QAApB,QAAoC,qBAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMc,yBAAyB,GAAG,MAAM;AACtC,UAAMC,QAAQ,GAAGT,YAAY,CAACU,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,MAAyB;AACzDC,MAAAA,EAAE,EAAEF,WAAW,CAACG,GADyC;AAEzDC,MAAAA,IAAI,EAAE,OAFmD;AAGzDC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAG,cAAaN,WAAW,CAACO,YAAa;AAD1C,OAHmD;AAMzDC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,MAAM,MAAMR,KAAjB;AAAwBS,QAAAA,CAAC,EAAE;AAA3B,OAN+C;AAOzDC,MAAAA,SAAS,EAAE,KAP8C;AAQzDC,MAAAA,QAAQ,EAAE;AAR+C,KAAzB,CAAjB,CAAjB;AAUA,WAAOd,QAAP;AACD,GAZD;;AAcAd,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,SAArC,EAA+C;AAClDC,MAAAA,MAAM,EAAE,KAD0C;AAElDC,MAAAA,WAAW,EAAE;AAFqC,KAA/C,CAAL,CAIGC,IAJH,CAISC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJjB,EAKGF,IALH,CAKSE,IAAD,IAAU;AACd,UAAI,OAAOA,IAAI,CAACC,GAAZ,KAAoB,WAAxB,EAAqC;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAAI,CAACC,GAAnC;AACD,OAFD,MAEO;AACLhC,QAAAA,eAAe,CAAC+B,IAAI,CAAChC,YAAN,CAAf;AACAG,QAAAA,aAAa,CAAC6B,IAAI,CAAC9B,UAAN,CAAb;AACAgC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA9B,QAAAA,WAAW,CAACG,yBAAyB,EAA1B,CAAX;AACA0B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA5B,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KAhBH,EAiBG6B,KAjBH,CAiBUH,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CAjBlB;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE3B,MAAM,gBAEF,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,UAFE,gBAIF,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UALN;AAOD;;GAhDuBL,O;;KAAAA,O","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport ReactFlow, { Position } from 'react-flow-renderer';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport default function Profile() {\n  const [applications, setApplications] = useState([]);\n  const [interviews, setInterviews] = useState([]);\n  const [elements, setElements] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const createApplicationElements = () => {\n    const newArray = applications.map((application, index) => ({\n      id: application._id,\n      type: 'input',\n      data: {\n        label: `Listing at ${application.company_name}`,\n      },\n      position: { x: 250 + 200 * index, y: 20 },\n      draggable: false,\n      isHidden: false,\n    }));\n    return newArray;\n  };\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}profile`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (typeof json.err !== 'undefined') {\n          console.log('Fetching error', json.err);\n        } else {\n          setApplications(json.applications);\n          setInterviews(json.interviews);\n          console.log('before');\n          setElements(createApplicationElements());\n          console.log('after');\n          setLoaded(true);\n        }\n      })\n      .catch((err) => console.log('error: ', err));\n  }, []);\n\n  return (\n    loaded\n      ? (\n        <ReactFlow elements={elements} />\n      )\n      : <LoadingSpinner />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}