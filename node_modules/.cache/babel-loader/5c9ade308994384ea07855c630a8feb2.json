{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Interviews/InterviewDetailed.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport LoadingSpinner from '../LoadingSpinner';\nimport InterviewUpdateForm from './InterviewUpdateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InterviewDetailed() {\n  _s();\n\n  const [interview, setInterview] = useState();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate(); // eslint-disable-next-line no-unused-vars\n\n  const [errors, setErrors] = useState(undefined);\n  const [loaded, setLoaded] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}interviews/${id}`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (typeof json.interview === 'undefined') {\n        setErrors(json.err);\n        setLoaded(true);\n      } else {\n        setInterview(json.interview);\n        setLoaded(true);\n      }\n    }).catch(err => setErrors(err));\n  }, [id]);\n\n  const DeleteInterview = () => {\n    fetch(`${process.env.REACT_APP_API_SERVER}interviews/${id}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (typeof json.err !== 'undefined') {\n        setErrors(json.err);\n      } else {\n        navigate('/dashboard/interviews');\n      }\n    });\n  };\n\n  if (!updating) {\n    return loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interviewDetailed\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: ['Interview at ', interview.application.company_name, ' on ', interview.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: typeof interview.status !== 'undefined' ? interview.status : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), interview.status === 'Finished' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: interview.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: interview.rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setUpdating(true),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => DeleteInterview(),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(InterviewUpdateForm, {\n    interview: interview,\n    setUpdating: setUpdating,\n    setErrors: setErrors\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InterviewDetailed, \"5d1T/G/4N8ABewRP+rlR4J5+dTc=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = InterviewDetailed;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewDetailed\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Interviews/InterviewDetailed.js"],"names":["React","useEffect","useState","useParams","useNavigate","LoadingSpinner","InterviewUpdateForm","InterviewDetailed","interview","setInterview","id","navigate","errors","setErrors","undefined","loaded","setLoaded","updating","setUpdating","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","err","catch","DeleteInterview","application","company_name","date","status","length","rate"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport LoadingSpinner from '../LoadingSpinner';\nimport InterviewUpdateForm from './InterviewUpdateForm';\n\nexport default function InterviewDetailed() {\n  const [interview, setInterview] = useState();\n  const { id } = useParams();\n  const navigate = useNavigate();\n  // eslint-disable-next-line no-unused-vars\n  const [errors, setErrors] = useState(undefined);\n  const [loaded, setLoaded] = useState(false);\n  const [updating, setUpdating] = useState(false);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}interviews/${id}`, {\n      method: 'GET',\n      credentials: 'include',\n    }).then((res) => res.json())\n      .then((json) => {\n        if (typeof json.interview === 'undefined') {\n          setErrors(json.err);\n          setLoaded(true);\n        } else {\n          setInterview(json.interview);\n          setLoaded(true);\n        }\n      })\n      .catch((err) => setErrors(err));\n  }, [id]);\n\n  const DeleteInterview = () => {\n    fetch(`${process.env.REACT_APP_API_SERVER}interviews/${id}`, {\n      method: 'DELETE',\n      credentials: 'include',\n    }).then((res) => res.json())\n      .then((json) => {\n        if (typeof json.err !== 'undefined') {\n          setErrors(json.err);\n        } else {\n          navigate('/dashboard/interviews');\n        }\n      });\n  };\n  if (!updating) {\n    return (\n      loaded\n        ? (\n          <div className=\"interviewDetailed\">\n            <h3>\n              {'Interview at '}\n              {interview.application.company_name}\n              {' on '}\n              {interview.date}\n            </h3>\n            <p>{typeof interview.status !== 'undefined' ? interview.status : ''}</p>\n            {interview.status === 'Finished'\n              ? (\n                <>\n                  <p>{interview.length}</p>\n                  <p>{interview.rate}</p>\n                </>\n              )\n              : ''}\n            <button type=\"button\" onClick={() => setUpdating(true)}>Update</button>\n            <button type=\"button\" onClick={() => DeleteInterview()}>Delete</button>\n          </div>\n        )\n        : <LoadingSpinner />\n    );\n  } return (\n    <InterviewUpdateForm\n      interview={interview}\n      setUpdating={setUpdating}\n      setErrors={setErrors}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}