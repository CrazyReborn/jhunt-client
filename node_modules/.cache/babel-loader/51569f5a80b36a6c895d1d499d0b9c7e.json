{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Interviews/NewInterviewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LoadingSpinner from '../LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewInterviewForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [date, setDate] = useState();\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState();\n  const [length, setLength] = useState(null);\n  const [status, setStatus] = useState('');\n  const [rate, setRate] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (json.applications === undefined) {\n        setErrors(json.err.errors);\n        setLoaded(true);\n      } else {\n        setApplications(json.applications);\n        setLoaded(true);\n      }\n    });\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}interviews`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        date,\n        application: selectedApplication,\n        length,\n        status,\n        rate\n      })\n    }).then(res => res.json()).then(json => {\n      if (json.msg === 'success') {\n        navigate('/dashboard/interviews');\n      } else {\n        setErrors(json.err.errors);\n      }\n    });\n  };\n\n  return loaded ? /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => onSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"date\",\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"application\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"application\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"--Please select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), applications.sort().map(applicationEntry => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: applicationEntry._id,\n          onChange: e => setSelectedApplication(e.target.value),\n          children: `at ${applicationEntry.company_name}`\n        }, applicationEntry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"length\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"length\",\n        onChange: e => setLength(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"--Please select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Upcoming\",\n          children: \"Upcoming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Finished\",\n          children: \"Finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rating\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"rating\",\n        onChange: e => setRate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errors\",\n      children: errors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err.msg\n      }, err.param, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewInterviewForm, \"uIt4LU96jpz+VX8R52aKQXKp/Rw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewInterviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewInterviewForm\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Interviews/NewInterviewForm.js"],"names":["React","useEffect","useState","useNavigate","LoadingSpinner","NewInterviewForm","navigate","date","setDate","applications","setApplications","selectedApplication","setSelectedApplication","length","setLength","status","setStatus","rate","setRate","errors","setErrors","loaded","setLoaded","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","undefined","err","onSubmit","e","preventDefault","body","JSON","stringify","application","msg","target","value","sort","map","applicationEntry","_id","company_name","param"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LoadingSpinner from '../LoadingSpinner';\n\nexport default function NewInterviewForm() {\n  const navigate = useNavigate();\n  const [date, setDate] = useState();\n  const [applications, setApplications] = useState([]);\n  const [selectedApplication, setSelectedApplication] = useState();\n  const [length, setLength] = useState(null);\n  const [status, setStatus] = useState('');\n  const [rate, setRate] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'GET',\n      credentials: 'include',\n    }).then((res) => res.json())\n      .then((json) => {\n        if (json.applications === undefined) {\n          setErrors(json.err.errors);\n          setLoaded(true);\n        } else {\n          setApplications(json.applications);\n          setLoaded(true);\n        }\n      });\n  });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}interviews`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        date,\n        application: selectedApplication,\n        length,\n        status,\n        rate,\n      }),\n    }).then((res) => res.json())\n      .then((json) => {\n        if (json.msg === 'success') {\n          navigate('/dashboard/interviews');\n        } else {\n          setErrors(json.err.errors);\n        }\n      });\n  };\n\n  return (\n    loaded\n      ? (\n        <form onSubmit={(e) => onSubmit(e)}>\n          <label htmlFor=\"date\">\n            <input type=\"date\" id=\"date\" name=\"date\" onChange={(e) => setDate(e.target.value)} />\n          </label>\n          <label htmlFor=\"application\">\n            <select id=\"application\">\n              <option value={null}>--Please select an option</option>\n              {applications.sort().map((applicationEntry) => (\n                <option\n                  key={applicationEntry._id}\n                  value={applicationEntry._id}\n                  onChange={(e) => setSelectedApplication(e.target.value)}\n                >\n                  {`at ${applicationEntry.company_name}`}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label htmlFor=\"length\">\n            <input type=\"number\" id=\"length\" onChange={(e) => setLength(e.target.value)} />\n          </label>\n          <label htmlFor=\"status\">\n            <select id=\"status\" onChange={(e) => setStatus(e.target.value)}>\n              <option value={null}>--Please select an option</option>\n              <option value=\"Upcoming\">Upcoming</option>\n              <option value=\"Finished\">Finished</option>\n            </select>\n          </label>\n          <label htmlFor=\"rating\">\n            <input type=\"number\" id=\"rating\" onChange={(e) => setRate(e.target.value)} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n          {errors.length > 0\n            ? (<div className=\"errors\">\n                {errors.map((err) => <p key={err.param}>{err.msg}</p>)}\n              </div>)\n            : ''}\n        </form>\n      )\n      : <LoadingSpinner />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}