{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Interviews/InterviewUpdateForm.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport LoadingSpinner from '../LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InterviewUpdateForm(props) {\n  _s();\n\n  const {\n    interview,\n    setUpdating,\n    setErrors\n  } = props;\n  const [applications, setApplications] = useState([]);\n  const [date, setDate] = useState(interview.date);\n  const [application, setApplication] = useState(interview.application);\n  const [length, setLength] = useState(interview.length);\n  const [status, setStatus] = useState(interview.status);\n  const [rate, setRate] = useState(interview.rate);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      console.log(json.applications);\n\n      if (typeof json.err === 'undefined') {\n        setErrors(json.err);\n        setLoaded(true);\n      } else {\n        setApplications(json.applications);\n        setLoaded(true);\n      }\n    }).catch(err => {\n      setErrors(err);\n      setLoaded(true);\n    });\n  }, [loaded]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date,\n        application,\n        length,\n        status,\n        rate\n      })\n    }).then(res => res.json()).then(json => {\n      if (typeof json.err !== 'undefined') {\n        setUpdating(false);\n      }\n    }).catch(err => setErrors(err));\n  };\n\n  return loaded ? /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"newInterviewForm\",\n    onSubmit: e => onSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: ['Set a date: ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"date\",\n        defaultValue: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"application\",\n      children: ['Select application: ', /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"application\",\n        defaultValue: application,\n        onChange: e => {\n          setApplication(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"--Please select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), applications.map(applicationEntry => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: applicationEntry._id,\n          children: `at ${applicationEntry.company_name}`\n        }, applicationEntry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"length\",\n      children: ['Set interview length (if finished): ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"length\",\n        defaultValue: length,\n        onChange: e => setLength(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"status\",\n      children: ['Set status: ', /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        defaultValue: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"--Please select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Upcoming\",\n          children: \"Upcoming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Finished\",\n          children: \"Finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rating\",\n      children: ['Rate the inteviews (if finished) ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"rating\",\n        defaultValue: rate,\n        onChange: e => setRate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InterviewUpdateForm, \"zxexFcWLT8Z0wSK+87AsCggGsuI=\");\n\n_c = InterviewUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewUpdateForm\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Interviews/InterviewUpdateForm.js"],"names":["React","useState","useEffect","LoadingSpinner","InterviewUpdateForm","props","interview","setUpdating","setErrors","applications","setApplications","date","setDate","application","setApplication","length","setLength","status","setStatus","rate","setRate","loaded","setLoaded","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","console","log","err","catch","onSubmit","e","preventDefault","headers","body","JSON","stringify","target","value","map","applicationEntry","_id","company_name"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport LoadingSpinner from '../LoadingSpinner';\n\nexport default function InterviewUpdateForm(props) {\n  const {\n    interview,\n    setUpdating,\n    setErrors,\n  } = props;\n  const [applications, setApplications] = useState([]);\n  const [date, setDate] = useState(interview.date);\n  const [application, setApplication] = useState(interview.application);\n  const [length, setLength] = useState(interview.length);\n  const [status, setStatus] = useState(interview.status);\n  const [rate, setRate] = useState(interview.rate);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'GET',\n      credentials: 'include',\n    }).then((res) => res.json())\n      .then((json) => {\n        console.log(json.applications);\n        if (typeof json.err === 'undefined') {\n          setErrors(json.err);\n          setLoaded(true);\n        } else {\n          setApplications(json.applications);\n          setLoaded(true);\n        }\n      })\n      .catch((err) => {\n        setErrors(err);\n        setLoaded(true);\n      });\n  }, [loaded]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        date,\n        application,\n        length,\n        status,\n        rate,\n      }),\n    }).then((res) => res.json())\n      .then((json) => {\n        if (typeof json.err !== 'undefined') {\n          setUpdating(false);\n        }\n      })\n      .catch((err) => setErrors(err));\n  };\n\n  return (\n    loaded\n      ? (\n        <form className=\"newInterviewForm\" onSubmit={(e) => onSubmit(e)}>\n          <label htmlFor=\"date\">\n            {'Set a date: '}\n            <input type=\"date\" id=\"date\" name=\"date\" defaultValue={date} onChange={(e) => setDate(e.target.value)} />\n          </label>\n          <label htmlFor=\"application\">\n            {'Select application: '}\n            <select\n              id=\"application\"\n              defaultValue={application}\n              onChange={(e) => {\n                setApplication(e.target.value);\n              }}\n            >\n              <option value={null}>--Please select an option</option>\n              {applications.map((applicationEntry) => (\n                <option\n                  key={applicationEntry._id}\n                  value={applicationEntry._id}\n                >\n                  {`at ${applicationEntry.company_name}`}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label htmlFor=\"length\">\n            {'Set interview length (if finished): '}\n            <input type=\"number\" id=\"length\" defaultValue={length} onChange={(e) => setLength(e.target.value)} />\n          </label>\n          <label htmlFor=\"status\">\n            {'Set status: '}\n            <select id=\"status\" defaultValue={status} onChange={(e) => setStatus(e.target.value)}>\n              <option value={null}>--Please select an option</option>\n              <option value=\"Upcoming\">Upcoming</option>\n              <option value=\"Finished\">Finished</option>\n            </select>\n          </label>\n          <label htmlFor=\"rating\">\n            {'Rate the inteviews (if finished) '}\n            <input type=\"number\" id=\"rating\" defaultValue={rate} onChange={(e) => setRate(e.target.value)} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      )\n      : <LoadingSpinner />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}