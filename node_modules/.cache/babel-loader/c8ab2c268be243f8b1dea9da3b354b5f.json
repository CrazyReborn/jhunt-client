{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/NewApplicationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/newApplicationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewApplicationForm() {\n  _s();\n\n  const [companyName, setCompanyName] = useState('');\n  const [position, setPosition] = useState('');\n  const [salary, setSalary] = useState('');\n  const [status, setStatus] = useState('');\n  const [location, setLocation] = useState('');\n  const [aggregator, setAggregator] = useState('');\n  const [foundOn, setFoundOn] = useState('');\n  const [cvSentOn, setCvSentOn] = useState('');\n  const [cvPath, setCvPath] = useState('');\n  const [jobLink, setJobLink] = useState('');\n  const [answerReceived, setAnswerReceived] = useState('');\n  const [qualificationsMet, setQualificationsMet] = useState('');\n  const [errors, setErrors] = useState([]);\n  const navigation = useNavigate();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(JSON.stringify({\n      companyName,\n      position,\n      salary,\n      status,\n      location,\n      aggregator,\n      foundOn,\n      cvSentOn,\n      cvPath,\n      jobLink,\n      answerReceived,\n      qualificationsMet\n    }));\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        companyName,\n        position,\n        salary,\n        status,\n        location,\n        aggregator,\n        foundOn,\n        cvSentOn,\n        cvPath,\n        jobLink,\n        answerReceived,\n        qualificationsMet\n      })\n    }).then(res => res.json()).then(json => {\n      if (json.msg !== 'success') {\n        console.log(json.err);\n        setErrors(json.err.errors);\n      } else {\n        navigation('/dashboard/applications');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newApplication\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"companyName\",\n          value: companyName,\n          onChange: e => setCompanyName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"position\",\n        children: [\"Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"position\",\n          value: position,\n          onChange: e => setPosition(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"salary\",\n        children: [\"Salary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"salary\",\n          value: salary,\n          onChange: e => setSalary(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: status,\n          id: \"status\",\n          onChange: e => setStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"--Please select an option--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Application sent\",\n            children: \"Application sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No answer\",\n            children: \"No answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Rejection\",\n            children: \"Rejection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Upcoming interview\",\n            children: \"Upcoming interview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Offered\",\n            children: \"Offered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: [\"Location\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"location\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"aggregator\",\n        children: [\"Aggregator\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"aggregator\",\n          value: aggregator,\n          onChange: e => setAggregator(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"foundOn\",\n        children: [\"Offer was found on:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"foundOn\",\n          value: foundOn,\n          onChange: e => setFoundOn(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cvSentOn\",\n        children: [\"CV was sent on:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"cvSentOn\",\n          value: cvSentOn,\n          onChange: e => setCvSentOn(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cvPath\",\n        children: [\"Upload CV\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"cvPath\",\n          value: cvPath,\n          onChange: e => setCvPath(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"jobLink\",\n        children: [\"Link to the offer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"jobLink\",\n          value: jobLink,\n          onChange: e => setJobLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answerReceivedOn\",\n        children: [\"Answer received on:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"answerReceivedOn\",\n          value: answerReceived,\n          onChange: e => setAnswerReceived(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"qualificationsMet\",\n        children: [\"Qualifications:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: qualificationsMet,\n          id: \"qualificationsMet\",\n          onChange: e => setQualificationsMet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"--Please select an option--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fully met\",\n            children: \"Fully met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mostly met\",\n            children: \"Mostly met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Half are met\",\n            children: \"Half are met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mostly unmet\",\n            children: \"Mostly unmet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fully unmet\",\n            children: \"Fully unmet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errors\",\n      children: errors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err.msg\n      }, err.param, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s(NewApplicationForm, \"46EHRPhZrzcq1KPamGW5sDinOjE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewApplicationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewApplicationForm\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/NewApplicationForm.js"],"names":["React","useState","useNavigate","NewApplicationForm","companyName","setCompanyName","position","setPosition","salary","setSalary","status","setStatus","location","setLocation","aggregator","setAggregator","foundOn","setFoundOn","cvSentOn","setCvSentOn","cvPath","setCvPath","jobLink","setJobLink","answerReceived","setAnswerReceived","qualificationsMet","setQualificationsMet","errors","setErrors","navigation","onSubmit","e","preventDefault","console","log","JSON","stringify","fetch","process","env","REACT_APP_API_SERVER","method","credentials","body","then","res","json","msg","err","target","value","length","map","param"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/newApplicationForm.css';\n\nexport default function NewApplicationForm() {\n  const [companyName, setCompanyName] = useState('');\n  const [position, setPosition] = useState('');\n  const [salary, setSalary] = useState('');\n  const [status, setStatus] = useState('');\n  const [location, setLocation] = useState('');\n  const [aggregator, setAggregator] = useState('');\n  const [foundOn, setFoundOn] = useState('');\n  const [cvSentOn, setCvSentOn] = useState('');\n  const [cvPath, setCvPath] = useState('');\n  const [jobLink, setJobLink] = useState('');\n  const [answerReceived, setAnswerReceived] = useState('');\n  const [qualificationsMet, setQualificationsMet] = useState('');\n  const [errors, setErrors] = useState([]);\n  const navigation = useNavigate();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(JSON.stringify({\n      companyName,\n      position,\n      salary,\n      status,\n      location,\n      aggregator,\n      foundOn,\n      cvSentOn,\n      cvPath,\n      jobLink,\n      answerReceived,\n      qualificationsMet,\n    }));\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        companyName,\n        position,\n        salary,\n        status,\n        location,\n        aggregator,\n        foundOn,\n        cvSentOn,\n        cvPath,\n        jobLink,\n        answerReceived,\n        qualificationsMet,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.msg !== 'success') {\n          console.log(json.err);\n          setErrors(json.err.errors);\n        } else {\n          navigation('/dashboard/applications');\n        }\n      });\n  };\n\n  return (\n    <>\n      <form className=\"newApplication\" onSubmit={(e) => onSubmit(e)}>\n        <label htmlFor=\"companyName\">\n          Company Name\n          <input type=\"text\" id=\"companyName\" value={companyName} onChange={(e) => setCompanyName(e.target.value)} />\n        </label>\n        <label htmlFor=\"position\">\n          Position\n          <input type=\"text\" id=\"position\" value={position} onChange={(e) => setPosition(e.target.value)} />\n        </label>\n        <label htmlFor=\"salary\">\n          Salary\n          <input type=\"number\" id=\"salary\" value={salary} onChange={(e) => setSalary(e.target.value)} />\n        </label>\n        <label htmlFor=\"status\">\n          Status\n          <select defaultValue={status} id=\"status\" onChange={(e) => setStatus(e.target.value)}>\n            <option value={null}>--Please select an option--</option>\n            <option value=\"Application sent\">Application sent</option>\n            <option value=\"No answer\">No answer</option>\n            <option value=\"Rejection\">Rejection</option>\n            <option value=\"Upcoming interview\">Upcoming interview</option>\n            <option value=\"Offered\">Offered</option>\n          </select>\n        </label>\n        <label htmlFor=\"location\">\n          Location\n          <input type=\"text\" id=\"location\" value={location} onChange={(e) => setLocation(e.target.value)} />\n        </label>\n        <label htmlFor=\"aggregator\">\n          Aggregator\n          <input type=\"text\" id=\"aggregator\" value={aggregator} onChange={(e) => setAggregator(e.target.value)} />\n        </label>\n        <label htmlFor=\"foundOn\">\n          Offer was found on:\n          <input type=\"date\" id=\"foundOn\" value={foundOn} onChange={(e) => setFoundOn(e.target.value)} />\n        </label>\n        <label htmlFor=\"cvSentOn\">\n          CV was sent on:\n          <input type=\"date\" id=\"cvSentOn\" value={cvSentOn} onChange={(e) => setCvSentOn(e.target.value)} />\n        </label>\n        <label htmlFor=\"cvPath\">\n          Upload CV\n          <input type=\"file\" id=\"cvPath\" value={cvPath} onChange={(e) => setCvPath(e.target.value)} />\n        </label>\n        <label htmlFor=\"jobLink\">\n          Link to the offer:\n          <input type=\"text\" id=\"jobLink\" value={jobLink} onChange={(e) => setJobLink(e.target.value)} />\n        </label>\n        <label htmlFor=\"answerReceivedOn\">\n          Answer received on:\n          <input type=\"date\" id=\"answerReceivedOn\" value={answerReceived} onChange={(e) => setAnswerReceived(e.target.value)} />\n        </label>\n        <label htmlFor=\"qualificationsMet\">\n          Qualifications:\n          <select defaultValue={qualificationsMet} id=\"qualificationsMet\" onChange={(e) => setQualificationsMet(e.target.value)}>\n            <option value={null}>--Please select an option--</option>\n            <option value=\"Fully met\">Fully met</option>\n            <option value=\"Mostly met\">Mostly met</option>\n            <option value=\"Half are met\">Half are met</option>\n            <option value=\"Mostly unmet\">Mostly unmet</option>\n            <option value=\"Fully unmet\">Fully unmet</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {errors.length > 0\n        ? (\n          <div className=\"errors\">\n            {errors.map((err) => <p key={err.param}>{err.msg}</p>)}\n          </div>\n        )\n        : ''}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}