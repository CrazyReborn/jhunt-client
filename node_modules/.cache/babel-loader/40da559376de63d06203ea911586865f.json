{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ErrorPopUp from './Applications/ErrorPopUp';\nimport '../styles/SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setError] = useState([]);\n  const [gotErr, setGotErr] = useState(false);\n  const navigate = useNavigate();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(json => {\n      if (typeof json.err !== 'undefined') {\n        setError(json.err.errors);\n      } else {\n        navigate('/dashboard/applications');\n      }\n\n      setGotErr(errors.length > 0);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: ['Username: ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: ['Password: ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ['Don\\'t have an account yet? ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn-action\",\n        type: \"submit\",\n        value: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n      errors: errors,\n      gotErr: gotErr,\n      setGotErr: setGotErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"NEKSwoDv2wliDRZmdMN1826y+sw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/SignIn.js"],"names":["React","useState","Link","useNavigate","ErrorPopUp","SignIn","username","setUsername","password","setPassword","errors","setError","gotErr","setGotErr","navigate","onSubmit","e","preventDefault","fetch","process","env","REACT_APP_API_SERVER","method","headers","credentials","body","JSON","stringify","then","res","json","err","length","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,QAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,QAArC,EAA8C;AACjDC,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFwC;AAKjDC,MAAAA,WAAW,EAAE,SALoC;AAMjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAErB,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAf;AAN2C,KAA9C,CAAL,CAQGoB,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSE,IAAD,IAAU;AACd,UAAI,OAAOA,IAAI,CAACC,GAAZ,KAAoB,WAAxB,EAAqC;AACnCpB,QAAAA,QAAQ,CAACmB,IAAI,CAACC,GAAL,CAASrB,MAAV,CAAR;AACD,OAFD,MAEO;AACLI,QAAAA,QAAQ,CAAC,yBAAD,CAAR;AACD;;AACDD,MAAAA,SAAS,CAACH,MAAM,CAACsB,MAAP,GAAgB,CAAjB,CAAT;AACD,KAhBH;AAiBD,GAnBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAGhB,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAA/B;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,mBACG,YADH,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAEV,QAA1C;AAAoD,UAAA,QAAQ,EAAGU,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACiB,MAAF,CAASC,KAAV;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,mBACG,YADH,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,KAAK,EAAE1B,QAA9C;AAAwD,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACiB,MAAF,CAASC,KAAV;AAApF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,mBACG,8BADH,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAA4C,QAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAExB,MAApB;AAA4B,MAAA,MAAM,EAAEE,MAApC;AAA4C,MAAA,SAAS,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/CuBR,M;UAKLF,W;;;KALKE,M","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ErrorPopUp from './Applications/ErrorPopUp';\nimport '../styles/SignUp.css';\n\nexport default function SignIn() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setError] = useState([]);\n  const [gotErr, setGotErr] = useState(false);\n  const navigate = useNavigate();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify({ username, password }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (typeof json.err !== 'undefined') {\n          setError(json.err.errors);\n        } else {\n          navigate('/dashboard/applications');\n        }\n        setGotErr(errors.length > 0);\n      });\n  };\n  return (\n    <div className=\"sign-up\">\n      <form onSubmit={(e) => onSubmit(e)}>\n        <label htmlFor=\"username\">\n          {'Username: '}\n          <input type=\"text\" name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label htmlFor=\"password\">\n          {'Password: '}\n          <input type=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n        <p>\n          {'Don\\'t have an account yet? '}\n          <Link to=\"/signup\">Sign Up</Link>\n        </p>\n        <input className=\"btn-action\" type=\"submit\" value=\"Sign In\" />\n      </form>\n      <ErrorPopUp errors={errors} gotErr={gotErr} setGotErr={setGotErr} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}