{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Applications/Applications.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport ApplicationGeneral from './ApplicationGeneral';\nimport LoadingSpinner from '../LoadingSpinner';\nimport ErrorPopUp from './ErrorPopUp';\nimport '../../styles/Applications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Applications(_ref) {\n  _s();\n\n  let {\n    rerender\n  } = _ref;\n  const [applications, setApplications] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [gotErr, setGotErr] = useState(false);\n  const [salaryUsrAvg, setSalaryUsrAvg] = useState(0);\n  const [salaryAllAvg, setSalaryAllAvg] = useState();\n\n  function calculateAvgSalary() {\n    const count = applications.length;\n    let sum = 0;\n    applications.forEach(app => {\n      sum += app.salary;\n    });\n    setSalaryUsrAvg(sum / count);\n    console.log(salaryAllAvg);\n    console.log(salaryUsrAvg);\n  }\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(json => {\n      if (json.applications === undefined) {\n        setErrors(json.err.errors);\n      } else {\n        setApplications(json.applications);\n        setSalaryAllAvg(json.averagesAll.avg);\n      }\n\n      setGotErr(errors.length > 0);\n    }).catch(err => {\n      setErrors(['There was an error while fetching data: ', err]);\n    }).finally(() => {\n      setLoaded(true);\n      calculateAvgSalary();\n    });\n  }, [rerender]);\n  return loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"applications\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"application\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: applications.sort((prev, next) => new Date(next.date) - new Date(prev.date)).map(application => /*#__PURE__*/_jsxDEV(ApplicationGeneral, {\n            application: application,\n            salaryUsrAvg: salaryUsrAvg,\n            salaryAllAvg: salaryAllAvg\n          }, application._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n      errors: errors,\n      gotErr: gotErr,\n      setGotErr: setGotErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Applications, \"MoLtHwJbd+Nv+H/zNaZ1ErFUt2w=\");\n\n_c = Applications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Applications\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Applications/Applications.js"],"names":["React","useEffect","useState","ApplicationGeneral","LoadingSpinner","ErrorPopUp","Applications","rerender","applications","setApplications","errors","setErrors","loaded","setLoaded","gotErr","setGotErr","salaryUsrAvg","setSalaryUsrAvg","salaryAllAvg","setSalaryAllAvg","calculateAvgSalary","count","length","sum","forEach","app","salary","console","log","fetch","process","env","REACT_APP_API_SERVER","method","credentials","then","res","json","undefined","err","averagesAll","avg","catch","finally","sort","prev","next","Date","date","map","application","_id"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport ApplicationGeneral from './ApplicationGeneral';\nimport LoadingSpinner from '../LoadingSpinner';\nimport ErrorPopUp from './ErrorPopUp';\nimport '../../styles/Applications.css';\n\nexport default function Applications({ rerender }) {\n  const [applications, setApplications] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [gotErr, setGotErr] = useState(false);\n  const [salaryUsrAvg, setSalaryUsrAvg] = useState(0);\n  const [salaryAllAvg, setSalaryAllAvg] = useState();\n\n  function calculateAvgSalary() {\n    const count = applications.length;\n    let sum = 0;\n    applications.forEach((app) => {\n      sum += app.salary;\n    });\n    setSalaryUsrAvg(sum / count);\n    console.log(salaryAllAvg);\n    console.log(salaryUsrAvg);\n  }\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.applications === undefined) {\n          setErrors(json.err.errors);\n        } else {\n          setApplications(json.applications);\n          setSalaryAllAvg(json.averagesAll.avg);\n        }\n        setGotErr(errors.length > 0);\n      })\n      .catch((err) => {\n        setErrors(['There was an error while fetching data: ', err]);\n      })\n      .finally(() => {\n        setLoaded(true);\n        calculateAvgSalary();\n      });\n  }, [rerender]);\n  return (\n    loaded\n      ? (\n        <>\n          <div className=\"applications\">\n            <table className=\"application\">\n              <thead>\n                <tr>\n                  <th>Company</th>\n                  <th>Position</th>\n                  <th>Status</th>\n                  <th>Salary</th>\n                  <th>Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {applications.sort((prev, next) => (new Date(next.date) - new Date(prev.date)))\n                  .map((application) => (\n                    <ApplicationGeneral\n                      key={application._id}\n                      application={application}\n                      salaryUsrAvg={salaryUsrAvg}\n                      salaryAllAvg={salaryAllAvg}\n                    />\n                  ))}\n              </tbody>\n            </table>\n          </div>\n          <ErrorPopUp errors={errors} gotErr={gotErr} setGotErr={setGotErr} />\n        </>\n      )\n      : <LoadingSpinner />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}