{"ast":null,"code":"var _jsxFileName = \"/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Applications/NewApplicationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/newApplicationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewApplicationForm() {\n  _s();\n\n  const [companyName, setCompanyName] = useState('');\n  const [position, setPosition] = useState('');\n  const [salary, setSalary] = useState('');\n  const [status, setStatus] = useState('');\n  const [location, setLocation] = useState('');\n  const [date, setDate] = useState('');\n  const [jobLink, setJobLink] = useState('');\n  const [qualificationsMet, setQualificationsMet] = useState('');\n  const [errors, setErrors] = useState([]);\n  const navigation = useNavigate();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        companyName,\n        position,\n        salary,\n        status,\n        location,\n        date,\n        jobLink,\n        qualificationsMet\n      })\n    }).then(res => res.json()).then(json => {\n      console.log(json.msg, json.err);\n\n      if (typeof json.msg === 'undefined') {\n        setErrors(json.err.errors);\n      } else navigation('/dashboard/applications');\n    }).catch(err => setErrors(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-application-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new-application\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add new application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: [\"Company Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"companyName\",\n          value: companyName,\n          onChange: e => setCompanyName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"position\",\n        children: [\"Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"position\",\n          value: position,\n          onChange: e => setPosition(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"salary\",\n        children: [\"Salary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"salary\",\n          value: salary,\n          onChange: e => setSalary(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: status,\n          id: \"status\",\n          onChange: e => setStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"--Please select an option--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Application sent\",\n            children: \"Application sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No answer\",\n            children: \"No answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No offer\",\n            children: \"No offer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Phone call\",\n            children: \"Phone call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Interview\",\n            children: \"Interview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Offered\",\n            children: \"Offered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: [\"Select date\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"jobLink\",\n        children: [\"Link to the offer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"jobLink\",\n          value: jobLink,\n          onChange: e => setJobLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: [\"Location\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"location\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"qualificationsMet\",\n        children: [\"Qualifications:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: qualificationsMet,\n          id: \"qualificationsMet\",\n          onChange: e => setQualificationsMet(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"--Please select an option--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fully met\",\n            children: \"Fully met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mostly met\",\n            children: \"Mostly met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Half are met\",\n            children: \"Half are met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mostly unmet\",\n            children: \"Mostly unmet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fully unmet\",\n            children: \"Fully unmet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errors\",\n      children: errors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err.msg\n      }, err.param, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewApplicationForm, \"dpuREhGxqwRFUOVVg2feb03v9/I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewApplicationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewApplicationForm\");","map":{"version":3,"sources":["/home/crazy_reborn/the_odin_project/jhunt-client/src/components/Applications/NewApplicationForm.js"],"names":["React","useState","useNavigate","NewApplicationForm","companyName","setCompanyName","position","setPosition","salary","setSalary","status","setStatus","location","setLocation","date","setDate","jobLink","setJobLink","qualificationsMet","setQualificationsMet","errors","setErrors","navigation","onSubmit","e","preventDefault","fetch","process","env","REACT_APP_API_SERVER","method","credentials","headers","body","JSON","stringify","then","res","json","console","log","msg","err","catch","target","value","length","map","param"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/newApplicationForm.css';\n\nexport default function NewApplicationForm() {\n  const [companyName, setCompanyName] = useState('');\n  const [position, setPosition] = useState('');\n  const [salary, setSalary] = useState('');\n  const [status, setStatus] = useState('');\n  const [location, setLocation] = useState('');\n  const [date, setDate] = useState('');\n  const [jobLink, setJobLink] = useState('');\n  const [qualificationsMet, setQualificationsMet] = useState('');\n  const [errors, setErrors] = useState([]);\n  const navigation = useNavigate();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_API_SERVER}applications`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        companyName,\n        position,\n        salary,\n        status,\n        location,\n        date,\n        jobLink,\n        qualificationsMet,\n      }),\n    }).then((res) => res.json())\n      .then((json) => {\n        console.log(json.msg, json.err);\n        if (typeof json.msg === 'undefined') {\n          setErrors(json.err.errors);\n        } else navigation('/dashboard/applications');\n      })\n      .catch((err) => setErrors(err));\n  };\n\n  return (\n    <div className=\"new-application-container\">\n      <form className=\"new-application\" onSubmit={(e) => onSubmit(e)}>\n        <h3>Add new application</h3>\n        <label htmlFor=\"companyName\">\n          Company Name\n          <input type=\"text\" id=\"companyName\" value={companyName} onChange={(e) => setCompanyName(e.target.value)} />\n        </label>\n        <label htmlFor=\"position\">\n          Position\n          <input type=\"text\" id=\"position\" value={position} onChange={(e) => setPosition(e.target.value)} />\n        </label>\n        <label htmlFor=\"salary\">\n          Salary\n          <input type=\"number\" id=\"salary\" value={salary} onChange={(e) => setSalary(e.target.value)} />\n        </label>\n        <label htmlFor=\"status\">\n          Status\n          <select defaultValue={status} id=\"status\" onChange={(e) => setStatus(e.target.value)}>\n            <option value={null}>--Please select an option--</option>\n            <option value=\"Application sent\">Application sent</option>\n            <option value=\"No answer\">No answer</option>\n            <option value=\"No offer\">No offer</option>\n            <option value=\"Phone call\">Phone call</option>\n            <option value=\"Interview\">Interview</option>\n            <option value=\"Offered\">Offered</option>\n          </select>\n        </label>\n        <label htmlFor=\"date\">\n          Select date\n          <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n        </label>\n        <label htmlFor=\"jobLink\">\n          Link to the offer:\n          <input type=\"text\" id=\"jobLink\" value={jobLink} onChange={(e) => setJobLink(e.target.value)} />\n        </label>\n        <label htmlFor=\"location\">\n          Location\n          <input type=\"text\" id=\"location\" value={location} onChange={(e) => setLocation(e.target.value)} />\n        </label>\n        <label htmlFor=\"qualificationsMet\">\n          Qualifications:\n          <select defaultValue={qualificationsMet} id=\"qualificationsMet\" onChange={(e) => setQualificationsMet(e.target.value)}>\n            <option value={null}>--Please select an option--</option>\n            <option value=\"Fully met\">Fully met</option>\n            <option value=\"Mostly met\">Mostly met</option>\n            <option value=\"Half are met\">Half are met</option>\n            <option value=\"Mostly unmet\">Mostly unmet</option>\n            <option value=\"Fully unmet\">Fully unmet</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {errors.length > 0\n        ? (\n          <div className=\"errors\">\n            {errors.map((err) => <p key={err.param}>{err.msg}</p>)}\n          </div>\n        )\n        : ''}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}